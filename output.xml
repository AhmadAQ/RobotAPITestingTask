<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.7.3 on win32)" generated="20200708 10:49:18.451" rpa="false">
<suite id="s1" name="Tests" source="C:\Users\DELL\PycharmProjects\Testing\tests.robot">
<test id="s1-t1" name="Get All Users">
<kw name="Get All Users Test" library="Keywords">
<tags>
<tag>lpn</tag>
</tags>
<doc>Calls the API to return the siblings of the LPN passed in. Expected result
is the API returns a code 500 error since the LPN is invalid with the message LPN X
is not valid where X is the LPN passed up</doc>
<kw name="Get All Users" library="APITests">
<doc>Documentation: This function uses the provided url to send API requests
using python's requests library. It should return the json data
that contains the specific data you are hoping to find. This function only returns the data with
the given path you provide (in tuple format).</doc>
<assign>
<var>${response_code}</var>
<var>${users_total}</var>
</assign>
<msg timestamp="20200708 10:49:19.125" level="INFO">${response_code} = 200</msg>
<msg timestamp="20200708 10:49:19.125" level="INFO">${users_total} = 12</msg>
<status status="PASS" starttime="20200708 10:49:19.031" endtime="20200708 10:49:19.125"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response_code}</arg>
<arg>${STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20200708 10:49:19.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 10:49:19.125" endtime="20200708 10:49:19.126"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${users_total}</arg>
<arg>${TOTAL_NUMBER_OF_USERS}</arg>
</arguments>
<msg timestamp="20200708 10:49:19.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 10:49:19.126" endtime="20200708 10:49:19.126"></status>
</kw>
<status status="PASS" starttime="20200708 10:49:19.031" endtime="20200708 10:49:19.127"></status>
</kw>
<status status="PASS" starttime="20200708 10:49:19.030" endtime="20200708 10:49:19.127" critical="yes"></status>
</test>
<test id="s1-t2" name="Get A Specific User">
<kw name="Get A Specific User Test" library="Keywords">
<tags>
<tag>lpn</tag>
</tags>
<doc>Calls the API to return the siblings of the LPN passed in. Expected result
is the API returns the six LPNs before and the six LPNs after the one that was passed up.
It returns the case tied to each LPN, the po tied to the case, and the current location
of the LPN. NOTE - These wouldnt necessarily be populated.</doc>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>random.randint(1, 12)</arg>
<arg>modules=random</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 10:49:19.130" level="INFO">${id} = 8</msg>
<status status="PASS" starttime="20200708 10:49:19.129" endtime="20200708 10:49:19.130"></status>
</kw>
<kw name="Get Single User" library="APITests">
<doc>Documentation: This function uses the provided user_id to send an API request
using python's requests library. It should return the json data
that contains the specific data you are hoping to find. This function only returns the data with
the given path you provide (in tuple format).</doc>
<arguments>
<arg>${id}</arg>
</arguments>
<assign>
<var>${recived_response}</var>
<var>${sent_id}</var>
</assign>
<msg timestamp="20200708 10:49:19.407" level="INFO">${recived_response} = 200</msg>
<msg timestamp="20200708 10:49:19.407" level="INFO">${sent_id} = 8</msg>
<status status="PASS" starttime="20200708 10:49:19.130" endtime="20200708 10:49:19.407"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${recived_response}</arg>
<arg>${STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20200708 10:49:19.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 10:49:19.407" endtime="20200708 10:49:19.407"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${id}</arg>
<arg>${sent_id}</arg>
</arguments>
<status status="PASS" starttime="20200708 10:49:19.407" endtime="20200708 10:49:19.408"></status>
</kw>
<status status="PASS" starttime="20200708 10:49:19.129" endtime="20200708 10:49:19.408"></status>
</kw>
<status status="PASS" starttime="20200708 10:49:19.129" endtime="20200708 10:49:19.408" critical="yes"></status>
</test>
<test id="s1-t3" name="Specific User Not Found">
<kw name="single user not found Test" library="Keywords">
<tags>
<tag>lpn</tag>
</tags>
<doc>Calls the API to return the siblings of the LPN passed in. Expected result
is the API returns the six LPNs before and the six LPNs after the one that was passed up.
It returns the case tied to each LPN, the po tied to the case, and the current location
of the LPN. NOTE - These wouldnt necessarily be populated.</doc>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>random.randint(13, 100)</arg>
<arg>modules=random</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 10:49:19.411" level="INFO">${id} = 100</msg>
<status status="PASS" starttime="20200708 10:49:19.411" endtime="20200708 10:49:19.411"></status>
</kw>
<kw name="Single User Not Found" library="APITests">
<doc>Documentation: This function uses the provided user_id to send an API request
using python's requests library. It should return the json data
that contains the specific data you are hoping to find. This function only returns the data with
the given path you provide (in tuple format).</doc>
<arguments>
<arg>${id}</arg>
</arguments>
<assign>
<var>${recived_response}</var>
</assign>
<msg timestamp="20200708 10:49:19.682" level="INFO">404</msg>
<msg timestamp="20200708 10:49:19.682" level="INFO">${recived_response} = 404</msg>
<status status="PASS" starttime="20200708 10:49:19.412" endtime="20200708 10:49:19.682"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${recived_response}</arg>
<arg>${STATUS_CODE_NOT_FOUND}</arg>
</arguments>
<msg timestamp="20200708 10:49:19.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 10:49:19.682" endtime="20200708 10:49:19.682"></status>
</kw>
<status status="PASS" starttime="20200708 10:49:19.411" endtime="20200708 10:49:19.683"></status>
</kw>
<status status="PASS" starttime="20200708 10:49:19.410" endtime="20200708 10:49:19.683" critical="yes"></status>
</test>
<test id="s1-t4" name="Create A User">
<kw name="Create a New User and Verify it was created" library="Keywords">
<tags>
<tag>lpn</tag>
</tags>
<doc>Calls the API to return the entire history of an LPN. Expected result is the
API returns the history of an LPN</doc>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>ahmad</arg>
</arguments>
<assign>
<var>${created_name}</var>
</assign>
<msg timestamp="20200708 10:49:19.685" level="INFO">${created_name} = ahmad</msg>
<status status="PASS" starttime="20200708 10:49:19.685" endtime="20200708 10:49:19.685"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>Actor</arg>
</arguments>
<assign>
<var>${created_job}</var>
</assign>
<msg timestamp="20200708 10:49:19.686" level="INFO">${created_job} = Actor</msg>
<status status="PASS" starttime="20200708 10:49:19.685" endtime="20200708 10:49:19.686"></status>
</kw>
<kw name="Create User" library="APITests">
<doc>Documentation: This function uses the provided user_name and user_job post a request
using python's requests library. It Creates a new user with the given parameters.
This function only returns the data in tuple format.</doc>
<arguments>
<arg>${created_name}</arg>
<arg>${created_job}</arg>
</arguments>
<assign>
<var>${new_user_name}</var>
<var>${new_user_job}</var>
<var>${response_status}</var>
</assign>
<msg timestamp="20200708 10:49:19.996" level="INFO">${new_user_name} = ahmad</msg>
<msg timestamp="20200708 10:49:19.996" level="INFO">${new_user_job} = Actor</msg>
<msg timestamp="20200708 10:49:19.996" level="INFO">${response_status} = 201</msg>
<status status="PASS" starttime="20200708 10:49:19.686" endtime="20200708 10:49:19.996"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>${STATUS_CODE_CREATED}</arg>
</arguments>
<msg timestamp="20200708 10:49:19.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 10:49:19.996" endtime="20200708 10:49:19.996"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${created_name}</arg>
<arg>${new_user_name}</arg>
</arguments>
<status status="PASS" starttime="20200708 10:49:19.996" endtime="20200708 10:49:19.997"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${created_job}</arg>
<arg>${new_user_job}</arg>
</arguments>
<status status="PASS" starttime="20200708 10:49:19.997" endtime="20200708 10:49:19.997"></status>
</kw>
<status status="PASS" starttime="20200708 10:49:19.685" endtime="20200708 10:49:19.997"></status>
</kw>
<status status="PASS" starttime="20200708 10:49:19.684" endtime="20200708 10:49:19.998" critical="yes"></status>
</test>
<test id="s1-t5" name="Update A User">
<kw name="Update User and Verify it has been updated" library="Keywords">
<tags>
<tag>lpn</tag>
</tags>
<doc>Calls the API to return the siblings of the LPN passed in. Expected result
is the API returns the six LPNs before and the six LPNs after the one that was passed up.
It returns the case tied to each LPN, the po tied to the case, and the current location
of the LPN. NOTE - These wouldnt necessarily be populated.</doc>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>random.randint(1, 12)</arg>
<arg>modules=random</arg>
</arguments>
<assign>
<var>${user_ID}</var>
</assign>
<msg timestamp="20200708 10:49:20.000" level="INFO">${user_ID} = 10</msg>
<status status="PASS" starttime="20200708 10:49:20.000" endtime="20200708 10:49:20.000"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>ahmad</arg>
</arguments>
<assign>
<var>${new_name}</var>
</assign>
<msg timestamp="20200708 10:49:20.001" level="INFO">${new_name} = ahmad</msg>
<status status="PASS" starttime="20200708 10:49:20.001" endtime="20200708 10:49:20.001"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>Actor</arg>
</arguments>
<assign>
<var>${new_job}</var>
</assign>
<msg timestamp="20200708 10:49:20.001" level="INFO">${new_job} = Actor</msg>
<status status="PASS" starttime="20200708 10:49:20.001" endtime="20200708 10:49:20.001"></status>
</kw>
<kw name="Update User" library="APITests">
<doc>Documentation: This function uses the provided user ID to update the specific user
using python's requests library. It updates the specific user with the given parameters.
This function returns the response data (name, job) from the request in tuple format.</doc>
<arguments>
<arg>${user_ID}</arg>
<arg>${new_name}</arg>
<arg>${new_job}</arg>
</arguments>
<assign>
<var>${updated_user_name}</var>
<var>${updated_user_job}</var>
<var>${received_status}</var>
</assign>
<msg timestamp="20200708 10:49:20.264" level="INFO">${updated_user_name} = ahmad</msg>
<msg timestamp="20200708 10:49:20.264" level="INFO">${updated_user_job} = Actor</msg>
<msg timestamp="20200708 10:49:20.264" level="INFO">${received_status} = 200</msg>
<status status="PASS" starttime="20200708 10:49:20.001" endtime="20200708 10:49:20.264"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${received_status}</arg>
<arg>${STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20200708 10:49:20.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 10:49:20.264" endtime="20200708 10:49:20.264"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${new_name}</arg>
<arg>${updated_user_name}</arg>
</arguments>
<status status="PASS" starttime="20200708 10:49:20.264" endtime="20200708 10:49:20.265"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${new_job}</arg>
<arg>${updated_user_job}</arg>
</arguments>
<status status="PASS" starttime="20200708 10:49:20.265" endtime="20200708 10:49:20.265"></status>
</kw>
<status status="PASS" starttime="20200708 10:49:20.000" endtime="20200708 10:49:20.265"></status>
</kw>
<status status="PASS" starttime="20200708 10:49:19.999" endtime="20200708 10:49:20.265" critical="yes"></status>
</test>
<test id="s1-t6" name="Delete A User">
<kw name="Delete User and Verify it Has been Deleted" library="Keywords">
<tags>
<tag>lpn</tag>
</tags>
<doc>Calls the API to return the siblings of the LPN passed in. Expected result
is the API returns the six LPNs before and the six LPNs after the one that was passed up.
It returns the case tied to each LPN, the po tied to the case, and the current location
of the LPN. NOTE - These wouldnt necessarily be populated.</doc>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>random.randint(1, 12)</arg>
<arg>modules=random</arg>
</arguments>
<assign>
<var>${User_ID}</var>
</assign>
<msg timestamp="20200708 10:49:20.268" level="INFO">${User_ID} = 9</msg>
<status status="PASS" starttime="20200708 10:49:20.267" endtime="20200708 10:49:20.268"></status>
</kw>
<kw name="Delete User" library="APITests">
<doc>Documentation: This function uses the provided user ID to delete a specific user
using python's requests library (DELETE method). This function returns the response
status data.</doc>
<arguments>
<arg>${User_ID}</arg>
</arguments>
<assign>
<var>${received_response}</var>
</assign>
<msg timestamp="20200708 10:49:20.534" level="INFO">${received_response} = 204</msg>
<status status="PASS" starttime="20200708 10:49:20.268" endtime="20200708 10:49:20.534"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${received_response}</arg>
<arg>${STATUS_CODE_NO_CONTENT}</arg>
</arguments>
<msg timestamp="20200708 10:49:20.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 10:49:20.534" endtime="20200708 10:49:20.534"></status>
</kw>
<status status="PASS" starttime="20200708 10:49:20.267" endtime="20200708 10:49:20.535"></status>
</kw>
<status status="PASS" starttime="20200708 10:49:20.266" endtime="20200708 10:49:20.535" critical="yes"></status>
</test>
<test id="s1-t7" name="Successfull Registration">
<kw name="Successfull Registration Test" library="Keywords">
<tags>
<tag>lpn</tag>
</tags>
<doc>Calls the API to return the siblings of the LPN passed in. Expected result
is the API returns the six LPNs before and the six LPNs after the one that was passed up.
It returns the case tied to each LPN, the po tied to the case, and the current location
of the LPN. NOTE - These wouldnt necessarily be populated.</doc>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>eve.holt@reqres.in</arg>
</arguments>
<assign>
<var>${user_email}</var>
</assign>
<msg timestamp="20200708 10:49:20.537" level="INFO">${user_email} = eve.holt@reqres.in</msg>
<status status="PASS" starttime="20200708 10:49:20.537" endtime="20200708 10:49:20.537"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>qwerty</arg>
</arguments>
<assign>
<var>${password}</var>
</assign>
<msg timestamp="20200708 10:49:20.537" level="INFO">${password} = qwerty</msg>
<status status="PASS" starttime="20200708 10:49:20.537" endtime="20200708 10:49:20.538"></status>
</kw>
<kw name="Successful Registration" library="APITests">
<doc>Documentation: This function uses the provided user user_email and user_password to register
using python's requests library (POST method). It sends email, password details.This function
returns the response data (registration id,registration token, response status code) from the
request in tuple format.</doc>
<arguments>
<arg>${user_email}</arg>
<arg>${password}</arg>
</arguments>
<assign>
<var>${created_id}</var>
<var>${created_token}</var>
<var>${verify_successful_registration}</var>
</assign>
<msg timestamp="20200708 10:49:20.811" level="INFO">${created_id} = 4</msg>
<msg timestamp="20200708 10:49:20.811" level="INFO">${created_token} = QpwL5tke4Pnpja7X4</msg>
<msg timestamp="20200708 10:49:20.811" level="INFO">${verify_successful_registration} = 200</msg>
<status status="PASS" starttime="20200708 10:49:20.538" endtime="20200708 10:49:20.811"></status>
</kw>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${created_id}</arg>
</arguments>
<status status="PASS" starttime="20200708 10:49:20.811" endtime="20200708 10:49:20.812"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${created_token}</arg>
</arguments>
<msg timestamp="20200708 10:49:20.812" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20200708 10:49:20.812" endtime="20200708 10:49:20.812"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${verify_successful_registration}</arg>
<arg>${STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20200708 10:49:20.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 10:49:20.812" endtime="20200708 10:49:20.812"></status>
</kw>
<status status="PASS" starttime="20200708 10:49:20.537" endtime="20200708 10:49:20.812"></status>
</kw>
<status status="PASS" starttime="20200708 10:49:20.537" endtime="20200708 10:49:20.813" critical="yes"></status>
</test>
<test id="s1-t8" name="UnSucessfull Registration">
<kw name="UnSuccessfull Registration Test" library="Keywords">
<tags>
<tag>lpn</tag>
</tags>
<doc>Calls the API to return the siblings of the LPN passed in. Expected result
is the API returns the six LPNs before and the six LPNs after the one that was passed up.
It returns the case tied to each LPN, the po tied to the case, and the current location
of the LPN. NOTE - These wouldnt necessarily be populated.</doc>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>ahmad@reqers.in</arg>
</arguments>
<assign>
<var>${user_email}</var>
</assign>
<msg timestamp="20200708 10:49:20.816" level="INFO">${user_email} = ahmad@reqers.in</msg>
<status status="PASS" starttime="20200708 10:49:20.815" endtime="20200708 10:49:20.816"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>qwerty</arg>
</arguments>
<assign>
<var>${password}</var>
</assign>
<msg timestamp="20200708 10:49:20.816" level="INFO">${password} = qwerty</msg>
<status status="PASS" starttime="20200708 10:49:20.816" endtime="20200708 10:49:20.816"></status>
</kw>
<kw name="Unsuccessful Registration" library="APITests">
<doc>Documentation: Takes a value such as a string to search against a regular expression.
To search for a specific regex value input into exp_value, set "escape_regex_chars" to False:
escape_regex_chars=False.</doc>
<arguments>
<arg>${user_email}</arg>
<arg>${password}</arg>
</arguments>
<assign>
<var>${verify_unSuccessful_registration}</var>
</assign>
<msg timestamp="20200708 10:49:21.081" level="INFO">${verify_unSuccessful_registration} = 400</msg>
<status status="PASS" starttime="20200708 10:49:20.816" endtime="20200708 10:49:21.081"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${verify_unSuccessful_registration}</arg>
<arg>${STATUS_CODE_BAD_REQUEST}</arg>
</arguments>
<msg timestamp="20200708 10:49:21.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 10:49:21.081" endtime="20200708 10:49:21.082"></status>
</kw>
<status status="PASS" starttime="20200708 10:49:20.815" endtime="20200708 10:49:21.082"></status>
</kw>
<status status="PASS" starttime="20200708 10:49:20.815" endtime="20200708 10:49:21.083" critical="yes"></status>
</test>
<test id="s1-t9" name="Sucessfull Login">
<kw name="Successfull Login Test" library="Keywords">
<tags>
<tag>lpn</tag>
</tags>
<doc>Calls the API to return the siblings of the LPN passed in. Expected result
is the API returns the six LPNs before and the six LPNs after the one that was passed up.
It returns the case tied to each LPN, the po tied to the case, and the current location
of the LPN. NOTE - These wouldnt necessarily be populated.</doc>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>eve.holt@reqres.in</arg>
</arguments>
<assign>
<var>${user_email}</var>
</assign>
<msg timestamp="20200708 10:49:21.085" level="INFO">${user_email} = eve.holt@reqres.in</msg>
<status status="PASS" starttime="20200708 10:49:21.085" endtime="20200708 10:49:21.085"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>qwerty</arg>
</arguments>
<assign>
<var>${password}</var>
</assign>
<msg timestamp="20200708 10:49:21.085" level="INFO">${password} = qwerty</msg>
<status status="PASS" starttime="20200708 10:49:21.085" endtime="20200708 10:49:21.085"></status>
</kw>
<kw name="Successful Login" library="APITests">
<doc>Documentation: Takes a value such as a string to search against a regular expression.
To search for a specific regex value input into exp_value, set "escape_regex_chars" to False:
escape_regex_chars=False.</doc>
<arguments>
<arg>${user_Email}</arg>
<arg>${password}</arg>
</arguments>
<assign>
<var>${verify_Successful_Login}</var>
</assign>
<msg timestamp="20200708 10:49:21.360" level="INFO">${verify_Successful_Login} = 200</msg>
<status status="PASS" starttime="20200708 10:49:21.085" endtime="20200708 10:49:21.360"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${verify_successful_login}</arg>
<arg>${STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20200708 10:49:21.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 10:49:21.361" endtime="20200708 10:49:21.361"></status>
</kw>
<status status="PASS" starttime="20200708 10:49:21.085" endtime="20200708 10:49:21.361"></status>
</kw>
<status status="PASS" starttime="20200708 10:49:21.084" endtime="20200708 10:49:21.362" critical="yes"></status>
</test>
<test id="s1-t10" name="UnSucessfull Login">
<kw name="UnSuccessfull login Test" library="Keywords">
<tags>
<tag>lpn</tag>
</tags>
<doc>Calls the API to return the siblings of the LPN passed in. Expected result
is the API returns the six LPNs before and the six LPNs after the one that was passed up.
It returns the case tied to each LPN, the po tied to the case, and the current location
of the LPN. NOTE - These wouldnt necessarily be populated.</doc>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>ahmad@reqers.in</arg>
</arguments>
<assign>
<var>${user_Email}</var>
</assign>
<msg timestamp="20200708 10:49:21.364" level="INFO">${user_Email} = ahmad@reqers.in</msg>
<status status="PASS" starttime="20200708 10:49:21.364" endtime="20200708 10:49:21.364"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>qwerty</arg>
</arguments>
<assign>
<var>${password}</var>
</assign>
<msg timestamp="20200708 10:49:21.364" level="INFO">${password} = qwerty</msg>
<status status="PASS" starttime="20200708 10:49:21.364" endtime="20200708 10:49:21.364"></status>
</kw>
<kw name="Unsuccessful Login" library="APITests">
<doc>Documentation: Takes a value such as a string to search against a regular expression.
To search for a specific regex value input into exp_value, set "escape_regex_chars" to False:
escape_regex_chars=False.</doc>
<arguments>
<arg>${user_Email}</arg>
<arg>${password}</arg>
</arguments>
<assign>
<var>${verify_unSuccessful_Login}</var>
</assign>
<msg timestamp="20200708 10:49:21.610" level="INFO">${verify_unSuccessful_Login} = 400</msg>
<status status="PASS" starttime="20200708 10:49:21.364" endtime="20200708 10:49:21.610"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${verify_unSuccessful_login}</arg>
<arg>${STATUS_CODE_BAD_REQUEST}</arg>
</arguments>
<msg timestamp="20200708 10:49:21.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 10:49:21.610" endtime="20200708 10:49:21.611"></status>
</kw>
<status status="PASS" starttime="20200708 10:49:21.364" endtime="20200708 10:49:21.611"></status>
</kw>
<status status="PASS" starttime="20200708 10:49:21.363" endtime="20200708 10:49:21.611" critical="yes"></status>
</test>
<test id="s1-t11" name="Delayed Response">
<kw name="delayed response test" library="Keywords">
<tags>
<tag>lpn</tag>
</tags>
<doc>Calls the API to return the siblings of the LPN passed in. Expected result
is the API returns the six LPNs before and the six LPNs after the one that was passed up.
It returns the case tied to each LPN, the po tied to the case, and the current location
of the LPN. NOTE - These wouldnt necessarily be populated.</doc>
<kw name="Delayed Response" library="APITests">
<doc>Documentation: Takes a value such as a string to search against a regular expression.
To search for a specific regex value input into exp_value, set "escape_regex_chars" to False:
escape_regex_chars=False.</doc>
<assign>
<var>${recived_response}</var>
<var>${users_total}</var>
</assign>
<msg timestamp="20200708 10:49:24.874" level="INFO">${recived_response} = 200</msg>
<msg timestamp="20200708 10:49:24.874" level="INFO">${users_total} = 12</msg>
<status status="PASS" starttime="20200708 10:49:21.613" endtime="20200708 10:49:24.874"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${recived_response}</arg>
<arg>${STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20200708 10:49:24.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 10:49:24.874" endtime="20200708 10:49:24.875"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${users_total}</arg>
<arg>${TOTAL_NUMBER_OF_USERS}</arg>
</arguments>
<msg timestamp="20200708 10:49:24.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 10:49:24.875" endtime="20200708 10:49:24.875"></status>
</kw>
<status status="PASS" starttime="20200708 10:49:21.613" endtime="20200708 10:49:24.875"></status>
</kw>
<status status="PASS" starttime="20200708 10:49:21.612" endtime="20200708 10:49:24.876" critical="yes"></status>
</test>
<status status="PASS" starttime="20200708 10:49:18.453" endtime="20200708 10:49:24.877"></status>
</suite>
<statistics>
<total>
<stat pass="11" fail="0">Critical Tests</stat>
<stat pass="11" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="11" fail="0" id="s1" name="Tests">Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
