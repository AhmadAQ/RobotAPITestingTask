<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.7.3 on win32)" generated="20200708 15:11:43.155" rpa="false">
<suite id="s1" name="Tests" source="C:\Users\DELL\PycharmProjects\Testing\tests.robot">
<test id="s1-t1" name="Get Data Tests">
<kw name="Get All Users Test" library="Keywords">
<tags>
<tag>GET</tag>
</tags>
<doc>Calls the API to return the response status code and total number of users.
Expected result is the API returns a code 200 success and 12 total users.</doc>
<kw name="Get All Users" library="APITests">
<doc>Documentation: This function uses the provided url to send an API request
using python's requests library (GET method). It should return the json data that contains
the specific data you are hoping to find. This function only returns the data with
the given path you provide (in tuple format).</doc>
<assign>
<var>${response_code}</var>
<var>${users_total}</var>
</assign>
<msg timestamp="20200708 15:11:43.776" level="INFO">${response_code} = 200</msg>
<msg timestamp="20200708 15:11:43.776" level="INFO">${users_total} = 12</msg>
<status status="PASS" starttime="20200708 15:11:43.333" endtime="20200708 15:11:43.776"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response_code}</arg>
<arg>${STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20200708 15:11:43.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 15:11:43.776" endtime="20200708 15:11:43.777"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${users_total}</arg>
<arg>${TOTAL_NUMBER_OF_USERS}</arg>
</arguments>
<msg timestamp="20200708 15:11:43.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 15:11:43.777" endtime="20200708 15:11:43.777"></status>
</kw>
<status status="PASS" starttime="20200708 15:11:43.333" endtime="20200708 15:11:43.777"></status>
</kw>
<kw name="Get A Specific User Test" library="Keywords">
<tags>
<tag>GET</tag>
</tags>
<doc>Calls the API to return the response status code and reponse user id.
Expected result is the API returns 200 status code success and the user id from the response.</doc>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>random.randint(1, 12)</arg>
<arg>modules=random</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 15:11:43.777" level="INFO">${id} = 10</msg>
<status status="PASS" starttime="20200708 15:11:43.777" endtime="20200708 15:11:43.777"></status>
</kw>
<kw name="Get Single User" library="APITests">
<doc>Documentation: This function uses the provided user_id to send an API request
using python's requests library (GET method). It should return the json data
that contains the specific data you are hoping to find. This function only returns the data with
the given path you provide (in tuple format).</doc>
<arguments>
<arg>${id}</arg>
</arguments>
<assign>
<var>${recived_response}</var>
<var>${sent_id}</var>
</assign>
<msg timestamp="20200708 15:11:44.068" level="INFO">${recived_response} = 200</msg>
<msg timestamp="20200708 15:11:44.068" level="INFO">${sent_id} = 10</msg>
<status status="PASS" starttime="20200708 15:11:43.777" endtime="20200708 15:11:44.068"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${recived_response}</arg>
<arg>${STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20200708 15:11:44.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 15:11:44.068" endtime="20200708 15:11:44.068"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${id}</arg>
<arg>${sent_id}</arg>
</arguments>
<status status="PASS" starttime="20200708 15:11:44.068" endtime="20200708 15:11:44.068"></status>
</kw>
<status status="PASS" starttime="20200708 15:11:43.777" endtime="20200708 15:11:44.068"></status>
</kw>
<kw name="single user not found Test" library="Keywords">
<tags>
<tag>GET</tag>
</tags>
<doc>Calls the API to return the response status code.
Expected result is the API returns 404 status code not found.</doc>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>random.randint(13, 100)</arg>
<arg>modules=random</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 15:11:44.070" level="INFO">${id} = 34</msg>
<status status="PASS" starttime="20200708 15:11:44.069" endtime="20200708 15:11:44.070"></status>
</kw>
<kw name="Single User Not Found" library="APITests">
<doc>Documentation: This function uses the provided user_id to send an API request
using python's requests library (GET method). It should return the json data
that contains the specific data you are hoping to find. This function only returns
the data with the given path you provide (in tuple format).</doc>
<arguments>
<arg>${id}</arg>
</arguments>
<assign>
<var>${recived_response}</var>
</assign>
<msg timestamp="20200708 15:11:44.338" level="INFO">404</msg>
<msg timestamp="20200708 15:11:44.339" level="INFO">${recived_response} = 404</msg>
<status status="PASS" starttime="20200708 15:11:44.070" endtime="20200708 15:11:44.339"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${recived_response}</arg>
<arg>${STATUS_CODE_NOT_FOUND}</arg>
</arguments>
<msg timestamp="20200708 15:11:44.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 15:11:44.339" endtime="20200708 15:11:44.339"></status>
</kw>
<status status="PASS" starttime="20200708 15:11:44.069" endtime="20200708 15:11:44.339"></status>
</kw>
<kw name="delayed response test" library="Keywords">
<tags>
<tag>GET</tag>
</tags>
<doc>Calls the API to return the response status code (OK) and total number of users.
Expected result is the API returns a code 200 success (OK) and 12 total users.</doc>
<kw name="Delayed Response" library="APITests">
<doc>Documentation: This function uses the url to send an API request
using python's requests library (GET request). It should return the json data
that contains the specific data you are hoping to find. This
function only returns the data with the given path you provide (in tuple format).</doc>
<assign>
<var>${recived_response}</var>
<var>${users_total}</var>
</assign>
<msg timestamp="20200708 15:11:47.608" level="INFO">${recived_response} = 200</msg>
<msg timestamp="20200708 15:11:47.608" level="INFO">${users_total} = 12</msg>
<status status="PASS" starttime="20200708 15:11:44.340" endtime="20200708 15:11:47.608"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${recived_response}</arg>
<arg>${STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20200708 15:11:47.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 15:11:47.608" endtime="20200708 15:11:47.608"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${users_total}</arg>
<arg>${TOTAL_NUMBER_OF_USERS}</arg>
</arguments>
<msg timestamp="20200708 15:11:47.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 15:11:47.608" endtime="20200708 15:11:47.609"></status>
</kw>
<status status="PASS" starttime="20200708 15:11:44.340" endtime="20200708 15:11:47.609"></status>
</kw>
<status status="PASS" starttime="20200708 15:11:43.332" endtime="20200708 15:11:47.609" critical="yes"></status>
</test>
<test id="s1-t2" name="Alter Data Tests">
<kw name="Create a New User and Verify it was created" library="Keywords">
<tags>
<tag>POST</tag>
</tags>
<doc>Calls the API to return the response status code (CREATED) name and job from the response body.
Expected result is the API returns 201 status code (CREATED) . name, job of the sent request should
be the same from the response data.</doc>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>ahmad</arg>
</arguments>
<assign>
<var>${created_name}</var>
</assign>
<msg timestamp="20200708 15:11:47.612" level="INFO">${created_name} = ahmad</msg>
<status status="PASS" starttime="20200708 15:11:47.611" endtime="20200708 15:11:47.612"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>Actor</arg>
</arguments>
<assign>
<var>${created_job}</var>
</assign>
<msg timestamp="20200708 15:11:47.612" level="INFO">${created_job} = Actor</msg>
<status status="PASS" starttime="20200708 15:11:47.612" endtime="20200708 15:11:47.612"></status>
</kw>
<kw name="Create User" library="APITests">
<doc>Documentation: This function uses the provided user_name and user_job post a request
using python's requests library (POST request). It Creates a new user with the given
parameters.This function only returns the data in tuple format.</doc>
<arguments>
<arg>${created_name}</arg>
<arg>${created_job}</arg>
</arguments>
<assign>
<var>${new_user_name}</var>
<var>${new_user_job}</var>
<var>${response_status}</var>
</assign>
<msg timestamp="20200708 15:11:47.895" level="INFO">${new_user_name} = ahmad</msg>
<msg timestamp="20200708 15:11:47.895" level="INFO">${new_user_job} = Actor</msg>
<msg timestamp="20200708 15:11:47.895" level="INFO">${response_status} = 201</msg>
<status status="PASS" starttime="20200708 15:11:47.612" endtime="20200708 15:11:47.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>${STATUS_CODE_CREATED}</arg>
</arguments>
<msg timestamp="20200708 15:11:47.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 15:11:47.895" endtime="20200708 15:11:47.896"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${created_name}</arg>
<arg>${new_user_name}</arg>
</arguments>
<status status="PASS" starttime="20200708 15:11:47.896" endtime="20200708 15:11:47.896"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${created_job}</arg>
<arg>${new_user_job}</arg>
</arguments>
<status status="PASS" starttime="20200708 15:11:47.896" endtime="20200708 15:11:47.896"></status>
</kw>
<status status="PASS" starttime="20200708 15:11:47.611" endtime="20200708 15:11:47.897"></status>
</kw>
<kw name="Update User and Verify it has been updated" library="Keywords">
<tags>
<tag>PUT</tag>
</tags>
<doc>Calls the API to return the response status code, updates name and job from the response body.
Expected result is the API returns 200 status code OK. name, job of the sent request should be
the same from the response data.</doc>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>random.randint(1, 12)</arg>
<arg>modules=random</arg>
</arguments>
<assign>
<var>${user_ID}</var>
</assign>
<msg timestamp="20200708 15:11:47.898" level="INFO">${user_ID} = 4</msg>
<status status="PASS" starttime="20200708 15:11:47.898" endtime="20200708 15:11:47.898"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>ahmad</arg>
</arguments>
<assign>
<var>${new_name}</var>
</assign>
<msg timestamp="20200708 15:11:47.898" level="INFO">${new_name} = ahmad</msg>
<status status="PASS" starttime="20200708 15:11:47.898" endtime="20200708 15:11:47.898"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>Actor</arg>
</arguments>
<assign>
<var>${new_job}</var>
</assign>
<msg timestamp="20200708 15:11:47.898" level="INFO">${new_job} = Actor</msg>
<status status="PASS" starttime="20200708 15:11:47.898" endtime="20200708 15:11:47.898"></status>
</kw>
<kw name="Update User" library="APITests">
<doc>Documentation: This function uses the provided user ID to update the specific user
using python's requests library (PUT method). It updates the specific user with the given parameters.
This function returns the response data (name, job) from the request in tuple format.</doc>
<arguments>
<arg>${user_ID}</arg>
<arg>${new_name}</arg>
<arg>${new_job}</arg>
</arguments>
<assign>
<var>${updated_user_name}</var>
<var>${updated_user_job}</var>
<var>${received_status}</var>
</assign>
<msg timestamp="20200708 15:11:48.159" level="INFO">${updated_user_name} = ahmad</msg>
<msg timestamp="20200708 15:11:48.159" level="INFO">${updated_user_job} = Actor</msg>
<msg timestamp="20200708 15:11:48.159" level="INFO">${received_status} = 200</msg>
<status status="PASS" starttime="20200708 15:11:47.898" endtime="20200708 15:11:48.159"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${received_status}</arg>
<arg>${STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20200708 15:11:48.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 15:11:48.159" endtime="20200708 15:11:48.160"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${new_name}</arg>
<arg>${updated_user_name}</arg>
</arguments>
<status status="PASS" starttime="20200708 15:11:48.160" endtime="20200708 15:11:48.160"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${new_job}</arg>
<arg>${updated_user_job}</arg>
</arguments>
<status status="PASS" starttime="20200708 15:11:48.160" endtime="20200708 15:11:48.160"></status>
</kw>
<status status="PASS" starttime="20200708 15:11:47.897" endtime="20200708 15:11:48.160"></status>
</kw>
<kw name="Delete User and Verify it Has been Deleted" library="Keywords">
<tags>
<tag>POST</tag>
</tags>
<doc>Calls the API to return the response status code NO CONTENT.
Expected result is the API returns 204 status code NO CONTENT.</doc>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>random.randint(1, 12)</arg>
<arg>modules=random</arg>
</arguments>
<assign>
<var>${User_ID}</var>
</assign>
<msg timestamp="20200708 15:11:48.162" level="INFO">${User_ID} = 11</msg>
<status status="PASS" starttime="20200708 15:11:48.161" endtime="20200708 15:11:48.162"></status>
</kw>
<kw name="Delete User" library="APITests">
<doc>Documentation: This function uses the provided user ID to delete a specific user
using python's requests library (DELETE method). This function returns the response
status data.</doc>
<arguments>
<arg>${User_ID}</arg>
</arguments>
<assign>
<var>${received_response}</var>
</assign>
<msg timestamp="20200708 15:11:48.428" level="INFO">${received_response} = 204</msg>
<status status="PASS" starttime="20200708 15:11:48.162" endtime="20200708 15:11:48.428"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${received_response}</arg>
<arg>${STATUS_CODE_NO_CONTENT}</arg>
</arguments>
<msg timestamp="20200708 15:11:48.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 15:11:48.428" endtime="20200708 15:11:48.429"></status>
</kw>
<status status="PASS" starttime="20200708 15:11:48.161" endtime="20200708 15:11:48.429"></status>
</kw>
<status status="PASS" starttime="20200708 15:11:47.611" endtime="20200708 15:11:48.430" critical="yes"></status>
</test>
<test id="s1-t3" name="Authorization Tests">
<kw name="Successfull Registration Test" library="Keywords">
<tags>
<tag>POST</tag>
</tags>
<doc>Calls the API to return the response status code (OK) , created id and token.
Expected result is the API returns 200 status code (OK) , an id and token for successfull registration.</doc>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>eve.holt@reqres.in</arg>
</arguments>
<assign>
<var>${user_email}</var>
</assign>
<msg timestamp="20200708 15:11:48.432" level="INFO">${user_email} = eve.holt@reqres.in</msg>
<status status="PASS" starttime="20200708 15:11:48.432" endtime="20200708 15:11:48.432"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>qwerty</arg>
</arguments>
<assign>
<var>${password}</var>
</assign>
<msg timestamp="20200708 15:11:48.432" level="INFO">${password} = qwerty</msg>
<status status="PASS" starttime="20200708 15:11:48.432" endtime="20200708 15:11:48.432"></status>
</kw>
<kw name="Successful Registration" library="APITests">
<doc>Documentation: This function uses the provided user user_email and user_password to register
using python's requests library (POST method). It sends email, password details.This function
returns the response data (registration id,registration token, response status code) from the
request in tuple format.</doc>
<arguments>
<arg>${user_email}</arg>
<arg>${password}</arg>
</arguments>
<assign>
<var>${created_id}</var>
<var>${created_token}</var>
<var>${verify_successful_registration}</var>
</assign>
<msg timestamp="20200708 15:11:48.714" level="INFO">${created_id} = 4</msg>
<msg timestamp="20200708 15:11:48.714" level="INFO">${created_token} = QpwL5tke4Pnpja7X4</msg>
<msg timestamp="20200708 15:11:48.714" level="INFO">${verify_successful_registration} = 200</msg>
<status status="PASS" starttime="20200708 15:11:48.432" endtime="20200708 15:11:48.714"></status>
</kw>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${created_id}</arg>
</arguments>
<status status="PASS" starttime="20200708 15:11:48.714" endtime="20200708 15:11:48.714"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${created_token}</arg>
</arguments>
<msg timestamp="20200708 15:11:48.714" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20200708 15:11:48.714" endtime="20200708 15:11:48.715"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${verify_successful_registration}</arg>
<arg>${STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20200708 15:11:48.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 15:11:48.715" endtime="20200708 15:11:48.715"></status>
</kw>
<status status="PASS" starttime="20200708 15:11:48.431" endtime="20200708 15:11:48.715"></status>
</kw>
<kw name="UnSuccessfull Registration Test" library="Keywords">
<tags>
<tag>POST</tag>
</tags>
<doc>Calls the API to return the response status code (BAD REQUEST).
Expected result is the API returns 400 status code (BAD REQUEST).</doc>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>ahmad@reqers.in</arg>
</arguments>
<assign>
<var>${user_email}</var>
</assign>
<msg timestamp="20200708 15:11:48.716" level="INFO">${user_email} = ahmad@reqers.in</msg>
<status status="PASS" starttime="20200708 15:11:48.716" endtime="20200708 15:11:48.716"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>qwerty</arg>
</arguments>
<assign>
<var>${password}</var>
</assign>
<msg timestamp="20200708 15:11:48.716" level="INFO">${password} = qwerty</msg>
<status status="PASS" starttime="20200708 15:11:48.716" endtime="20200708 15:11:48.716"></status>
</kw>
<kw name="Unsuccessful Registration" library="APITests">
<doc>Documentation: This function uses the provided user user_email and user_password to register
using python's requests library (POST method). It sends email, password details.This function
returns the response data (response status code) from the request.</doc>
<arguments>
<arg>${user_email}</arg>
<arg>${password}</arg>
</arguments>
<assign>
<var>${verify_unSuccessful_registration}</var>
</assign>
<msg timestamp="20200708 15:11:48.978" level="INFO">${verify_unSuccessful_registration} = 400</msg>
<status status="PASS" starttime="20200708 15:11:48.716" endtime="20200708 15:11:48.978"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${verify_unSuccessful_registration}</arg>
<arg>${STATUS_CODE_BAD_REQUEST}</arg>
</arguments>
<msg timestamp="20200708 15:11:48.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 15:11:48.978" endtime="20200708 15:11:48.978"></status>
</kw>
<status status="PASS" starttime="20200708 15:11:48.716" endtime="20200708 15:11:48.978"></status>
</kw>
<kw name="Successfull Login Test" library="Keywords">
<tags>
<tag>POST</tag>
</tags>
<doc>Calls the API to return the response status code (OK) and token.
Expected result is the API returns 200 status code (OK) and token for successfull login.</doc>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>eve.holt@reqres.in</arg>
</arguments>
<assign>
<var>${user_email}</var>
</assign>
<msg timestamp="20200708 15:11:48.980" level="INFO">${user_email} = eve.holt@reqres.in</msg>
<status status="PASS" starttime="20200708 15:11:48.980" endtime="20200708 15:11:48.980"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>qwerty</arg>
</arguments>
<assign>
<var>${password}</var>
</assign>
<msg timestamp="20200708 15:11:48.980" level="INFO">${password} = qwerty</msg>
<status status="PASS" starttime="20200708 15:11:48.980" endtime="20200708 15:11:48.980"></status>
</kw>
<kw name="Successful Login" library="APITests">
<doc>Documentation: This function uses the provided user user_email and user_password to login
using python's requests library (POST method). It sends email, password details.This function
returns the response data (login token, response status code) from the request in tuple format.</doc>
<arguments>
<arg>${user_Email}</arg>
<arg>${password}</arg>
</arguments>
<assign>
<var>${response_token}</var>
<var>${verify_Successful_Login}</var>
</assign>
<msg timestamp="20200708 15:11:49.240" level="INFO">${response_token} = QpwL5tke4Pnpja7X4</msg>
<msg timestamp="20200708 15:11:49.240" level="INFO">${verify_Successful_Login} = 200</msg>
<status status="PASS" starttime="20200708 15:11:48.980" endtime="20200708 15:11:49.240"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${response_token}</arg>
</arguments>
<msg timestamp="20200708 15:11:49.241" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20200708 15:11:49.240" endtime="20200708 15:11:49.241"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${verify_successful_login}</arg>
<arg>${STATUS_CODE_OK}</arg>
</arguments>
<msg timestamp="20200708 15:11:49.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 15:11:49.241" endtime="20200708 15:11:49.241"></status>
</kw>
<status status="PASS" starttime="20200708 15:11:48.979" endtime="20200708 15:11:49.241"></status>
</kw>
<kw name="UnSuccessfull login Test" library="Keywords">
<tags>
<tag>POST</tag>
</tags>
<doc>Calls the API to return the response status code (BAD REQUEST).
Expected result is the API returns 400 status code (BAD REQUEST).</doc>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>ahmad@reqers.in</arg>
</arguments>
<assign>
<var>${user_Email}</var>
</assign>
<msg timestamp="20200708 15:11:49.242" level="INFO">${user_Email} = ahmad@reqers.in</msg>
<status status="PASS" starttime="20200708 15:11:49.242" endtime="20200708 15:11:49.242"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>qwerty</arg>
</arguments>
<assign>
<var>${password}</var>
</assign>
<msg timestamp="20200708 15:11:49.242" level="INFO">${password} = qwerty</msg>
<status status="PASS" starttime="20200708 15:11:49.242" endtime="20200708 15:11:49.242"></status>
</kw>
<kw name="Unsuccessful Login" library="APITests">
<doc>Documentation: This function uses the provided user user_email and user_password to login
using python's requests library (POST method). It sends email, password details.This function
returns the response data (response status code) from the reques.</doc>
<arguments>
<arg>${user_Email}</arg>
<arg>${password}</arg>
</arguments>
<assign>
<var>${verify_unSuccessful_Login}</var>
</assign>
<msg timestamp="20200708 15:11:49.418" level="INFO">${verify_unSuccessful_Login} = 400</msg>
<status status="PASS" starttime="20200708 15:11:49.243" endtime="20200708 15:11:49.418"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${verify_unSuccessful_login}</arg>
<arg>${STATUS_CODE_BAD_REQUEST}</arg>
</arguments>
<msg timestamp="20200708 15:11:49.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200708 15:11:49.418" endtime="20200708 15:11:49.418"></status>
</kw>
<status status="PASS" starttime="20200708 15:11:49.242" endtime="20200708 15:11:49.418"></status>
</kw>
<status status="PASS" starttime="20200708 15:11:48.431" endtime="20200708 15:11:49.419" critical="yes"></status>
</test>
<status status="PASS" starttime="20200708 15:11:43.159" endtime="20200708 15:11:49.421"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="Tests">Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
